{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Recommendation Engines\n",
    "\n",
    "## Monday 20 November 2016\n",
    "\n",
    "1. Load and summarise data\n",
    "2. Calculate the Jaccard Similarity\n",
    "3. Recommender (User Similarity)\n",
    "4. Recommender (Item Similarity)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        80002\n",
       "1        80002\n",
       "2        80010\n",
       "3        80010\n",
       "4        80010\n",
       "5        80010\n",
       "6        80010\n",
       "7        80010\n",
       "8        80010\n",
       "9        80010\n",
       "10       80010\n",
       "11       80010\n",
       "12       80011\n",
       "13       80011\n",
       "14       80011\n",
       "15       80011\n",
       "16       80011\n",
       "17       80011\n",
       "18       80011\n",
       "19       80011\n",
       "20       80011\n",
       "21       80011\n",
       "22       80011\n",
       "23       80011\n",
       "24       80011\n",
       "25       80011\n",
       "26       80015\n",
       "27       80015\n",
       "28       80015\n",
       "29       80015\n",
       "         ...  \n",
       "23774    91924\n",
       "23775    91927\n",
       "23776    91927\n",
       "23777    91931\n",
       "23778    91931\n",
       "23779    91931\n",
       "23780    91931\n",
       "23781    91943\n",
       "23782    91943\n",
       "23783    91943\n",
       "23784    91944\n",
       "23785    91944\n",
       "23786    91944\n",
       "23787    91944\n",
       "23788    91944\n",
       "23789    91944\n",
       "23790    91944\n",
       "23791    91944\n",
       "23792    91944\n",
       "23793    91944\n",
       "23794    91946\n",
       "23795    91946\n",
       "23796    91946\n",
       "23797    91946\n",
       "23798    91955\n",
       "23799    91957\n",
       "23800    91957\n",
       "23801    91957\n",
       "23802    91957\n",
       "23803    91957\n",
       "Name: ID, dtype: int64"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 1. Load and Summarise the data\n",
    "import pandas as pd\n",
    "\n",
    "#read in brands data - fill in\n",
    "user_brands = pd.read_csv('user_brand.csv')\n",
    "\n",
    "#look at count of stores\n",
    "user_brands.Store.value_counts()\n",
    "\n",
    "# Series of user IDs, note the duplicates\n",
    "user_ids = user_brands.ID\n",
    "\n",
    "user_ids"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID     Store               \n",
       "80002  Home Depot              1\n",
       "       Target                  1\n",
       "80010  Container Store         1\n",
       "       Converse                1\n",
       "       Cuisinart               1\n",
       "       DKNY                    1\n",
       "       Express                 1\n",
       "       Kohl's                  1\n",
       "       Levi's                  1\n",
       "       Nordstrom               1\n",
       "       Old Navy                1\n",
       "       Puma                    1\n",
       "80011  BCBGMAXAZRIA            1\n",
       "       Banana Republic         1\n",
       "       Calvin Klein            1\n",
       "       Crate & Barrel          1\n",
       "       Diesel                  1\n",
       "       French Connection       1\n",
       "       Gap                     1\n",
       "       Guess                   1\n",
       "       Kenneth Cole            1\n",
       "       Nine West               1\n",
       "       Nordstrom               1\n",
       "       Restoration Hardware    1\n",
       "       Steve Madden            1\n",
       "       Target                  1\n",
       "80015  Banana Republic         1\n",
       "       Gap                     1\n",
       "       Home Depot              1\n",
       "       Target                  1\n",
       "                              ..\n",
       "91924  Nordstrom               1\n",
       "91927  Banana Republic         1\n",
       "       Calvin Klein            1\n",
       "91931  Container Store         1\n",
       "       Crocs                   1\n",
       "       Home Depot              1\n",
       "       KitchenAid              1\n",
       "91943  Kohl's                  1\n",
       "       Life is good            1\n",
       "       Old Navy                1\n",
       "91944  Crate & Barrel          1\n",
       "       Express                 1\n",
       "       French Connection       1\n",
       "       Guess                   1\n",
       "       Home Depot              1\n",
       "       Kohl's                  1\n",
       "       Lands' End              1\n",
       "       Nine West               1\n",
       "       Old Navy                1\n",
       "       Target                  1\n",
       "91946  Levi's                  1\n",
       "       Nordstrom               1\n",
       "       Old Navy                1\n",
       "       Target                  1\n",
       "91955  Serena and Lily         1\n",
       "91957  BCBGMAXAZRIA            1\n",
       "       Container Store         1\n",
       "       Express                 1\n",
       "       Old Navy                1\n",
       "       Target                  1\n",
       "Name: Store, dtype: int64"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# groupby ID to see what each user likes\n",
    "user_brands.groupby('ID').Store.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# turns my data frame into a dictionary\n",
    "# where the key is a user ID, and the value is a \n",
    "# list of stores that the user \"likes\"\n",
    "brandsfor = {str(k): list(v) for k,v in user_brands.groupby(\"ID\")[\"Store\"]}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[\"Kohl's\", 'Target']"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# try it out. User 83065 likes Kohl's and Target\n",
    "brandsfor['83065']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Hanky Panky',\n",
       " 'Betsey Johnson',\n",
       " 'Converse',\n",
       " 'Steve Madden',\n",
       " 'Old Navy',\n",
       " 'Target',\n",
       " 'Nordstrom']"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# User 82983 likes more\n",
    "brandsfor['82983']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "## 2. Jaccard Similarity ##\n",
    "\n",
    "The Jaccard Similarity allows us to compare two sets\n",
    "If we regard people as merely being a set of brands they prefer\n",
    "the Jaccard Similarity allows us to compare people\n",
    "\n",
    "Example. the jaccard similarty between user 82983 and 83065 is .125\n",
    "            because\n",
    "            \n",
    "            brandsfor['83065'] == [\"Kohl's\", 'Target']\n",
    "            \n",
    "            brandsfor['82983'] == ['Hanky Panky', 'Betsey Johnson', 'Converse', 'Steve Madden', 'Old Navy', 'Target', 'Nordstrom']\n",
    "\n",
    "the intersection of these two sets is just set(\"Target\")\n",
    "the union of the two sets is set(['Target', 'Hanky Panky', 'Betsey Johnson', 'Converse', 'Steve Madden', 'Old Navy', 'Target', 'Nordstrom'])\n",
    "so the len(intersection) / len(union) = 1 / 8 == .125\n",
    "\n",
    "\n",
    "EXERCISE: what is the Jaccard Similarity \n",
    "          between user 82956 and user 82963?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Puma', 'New Balance', 'Old Navy', 'Target']"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "brandsfor['82956']\n",
    "brandsfor['82963']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "'''\n",
    "EXERCISE: Complete the jaccard method below.\n",
    "          It should take in a list of brands, and output the \n",
    "          jaccard similarity between them\n",
    "\n",
    "This should work with anything in the set, for example\n",
    "jaccard([1,2,3], [2,3,4,5,6])  == .3333333\n",
    "\n",
    "HINT: set1 & set2 is the intersection\n",
    "      set1 | set2 is the union\n",
    "\n",
    "'''\n",
    "\n",
    "def jaccard(first, second):\n",
    "  first = set(first)\n",
    "  second = set(second)\n",
    "  return float(len(first & second)) / len(first | second)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\"Kohl's\", 'Target']\n",
      "['Hanky Panky', 'Betsey Johnson', 'Converse', 'Steve Madden', 'Old Navy', 'Target', 'Nordstrom']\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0.125"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# try it out!\n",
    "print(brandsfor['83065']) # brands for user 83065\n",
    "print(brandsfor['82983']) # brands for user 82983\n",
    "jaccard(brandsfor['83065'], brandsfor['82983'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3333333333333333"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jaccard(brandsfor['82956'], brandsfor['82963'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Recommender (User Similarity)\n",
    "\n",
    "Our recommender will be a modified KNN collaborative algorithm.\n",
    "Input: A given user's brands that they like\n",
    "Output: A set (no repeats) of brand recommendations based on\n",
    "        similar users preferences\n",
    "\n",
    "1. When a user's brands are given to us, we will calculate the input user's\n",
    "jaccard similarity with every person in our brandsfor dictionary\n",
    "\n",
    "2. We will pick the K most similar users and recommend\n",
    "the brands that they like that the given user doesn't know about\n",
    "\n",
    "EXAMPLE:\n",
    "Given User likes ['Target', 'Old Navy', 'Banana Republic', 'H&M']\n",
    "Outputs: ['Forever 21', 'Gap', 'Steve Madden']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.2"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "given_user = ['Target', 'Old Navy', 'Banana Republic', 'H&M']\n",
    "\n",
    "#similarty between user 83065 and given user\n",
    "brandsfor[\"83065\"]\n",
    "jaccard(brandsfor[\"83065\"], given_user)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### EXERCISE:\n",
    "\n",
    "Find the similarty between given_user and ALL of our users\n",
    "output should be a dictionary where\n",
    "the key is a user id and the value is the jaccard similarity\n",
    "\n",
    "\n",
    "\n",
    "{...\n",
    " '83055': 0.25,\n",
    " '83056': 0.0,\n",
    " '83058': 0.1111111111111111,\n",
    " '83060': 0.07894736842105263,\n",
    " '83061': 0.4,\n",
    " '83064': 0.25,\n",
    " '83065': 0.2,\n",
    " ...}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false,
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "similarities = {k: jaccard(given_user, v) for k, v in brandsfor.iteritems()}\n",
    "\n",
    "similarities\n",
    "\n",
    "K = 5 #number of similar users to look at"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'80050': 0.10526315789473684,\n",
       " '81402': 0.3333333333333333,\n",
       " '84916': 0.0,\n",
       " '86360': 0.2222222222222222,\n",
       " '84914': 0.125,\n",
       " '84913': 0.0,\n",
       " '86367': 0.16666666666666666,\n",
       " '89376': 0.2,\n",
       " '86365': 0.18181818181818182,\n",
       " '89378': 0.0,\n",
       " '88710': 0.1111111111111111,\n",
       " '86369': 0.0,\n",
       " '84919': 0.2857142857142857,\n",
       " '89176': 0.2,\n",
       " '89173': 0.06818181818181818,\n",
       " '89170': 0.0,\n",
       " '89171': 0.0,\n",
       " '82198': 0.06666666666666667,\n",
       " '87969': 0.0,\n",
       " '82448': 0.18181818181818182,\n",
       " '82443': 0.17647058823529413,\n",
       " '80151': 0.25,\n",
       " '82440': 0.07692307692307693,\n",
       " '82446': 0.0,\n",
       " '82197': 0.23076923076923078,\n",
       " '82196': 0.16666666666666666,\n",
       " '85450': 0.0,\n",
       " '88625': 0.15789473684210525,\n",
       " '88155': 0.23076923076923078,\n",
       " '88154': 0.2,\n",
       " '88153': 0.14285714285714285,\n",
       " '88152': 0.2,\n",
       " '90246': 0.1111111111111111,\n",
       " '88628': 0.125,\n",
       " '85047': 0.0,\n",
       " '88395': 0.07142857142857142,\n",
       " '84862': 0.0,\n",
       " '88397': 0.25,\n",
       " '82992': 0.1111111111111111,\n",
       " '82995': 0.3333333333333333,\n",
       " '88390': 0.0,\n",
       " '82997': 0.2222222222222222,\n",
       " '82996': 0.25,\n",
       " '81536': 0.0,\n",
       " '81537': 0.25,\n",
       " '81243': 0.16666666666666666,\n",
       " '81532': 0.09523809523809523,\n",
       " '89372': 0.043478260869565216,\n",
       " '82229': 0.1111111111111111,\n",
       " '86211': 0.13333333333333333,\n",
       " '87585': 0.0,\n",
       " '89373': 0.0,\n",
       " '87581': 0.0,\n",
       " '87580': 0.0,\n",
       " '85458': 0.2857142857142857,\n",
       " '89374': 0.0,\n",
       " '89375': 0.0,\n",
       " '86986': 0.25,\n",
       " '80054': 0.16666666666666666,\n",
       " '86982': 0.07142857142857142,\n",
       " '86980': 0.125,\n",
       " '80598': 0.1111111111111111,\n",
       " '81008': 0.4,\n",
       " '80590': 0.11764705882352941,\n",
       " '81334': 0.2,\n",
       " '81335': 0.0,\n",
       " '81336': 0.25,\n",
       " '88020': 0.1111111111111111,\n",
       " '88027': 0.16666666666666666,\n",
       " '88026': 0.3333333333333333,\n",
       " '90828': 0.0,\n",
       " '88024': 0.1875,\n",
       " '80207': 0.0,\n",
       " '80206': 0.0,\n",
       " '80205': 0.06666666666666667,\n",
       " '80204': 0.0,\n",
       " '85323': 0.3333333333333333,\n",
       " '90535': 0.0,\n",
       " '90536': 0.2,\n",
       " '90537': 0.1111111111111111,\n",
       " '82532': 0.16666666666666666,\n",
       " '82530': 0.0,\n",
       " '82534': 0.3333333333333333,\n",
       " '81622': 0.0,\n",
       " '81620': 0.15384615384615385,\n",
       " '81621': 0.0,\n",
       " '81625': 0.11538461538461539,\n",
       " '81672': 0.0,\n",
       " '81673': 0.2,\n",
       " '82763': 0.1111111111111111,\n",
       " '83000': 0.08333333333333333,\n",
       " '80279': 0.06666666666666667,\n",
       " '82761': 0.14285714285714285,\n",
       " '90792': 0.0,\n",
       " '81858': 0.18181818181818182,\n",
       " '90263': 0.16666666666666666,\n",
       " '90224': 0.0,\n",
       " '84123': 0.25,\n",
       " '90222': 0.0,\n",
       " '85183': 0.125,\n",
       " '85182': 0.09090909090909091,\n",
       " '83074': 0.0,\n",
       " '90228': 0.14285714285714285,\n",
       " '80119': 0.14285714285714285,\n",
       " '81755': 0.14285714285714285,\n",
       " '81772': 0.3333333333333333,\n",
       " '81750': 0.0,\n",
       " '80113': 0.0,\n",
       " '85430': 0.11538461538461539,\n",
       " '80117': 0.16666666666666666,\n",
       " '86041': 0.058823529411764705,\n",
       " '85611': 0.25,\n",
       " '90008': 0.125,\n",
       " '85614': 0.2,\n",
       " '80542': 0.14285714285714285,\n",
       " '85619': 0.16666666666666666,\n",
       " '90000': 0.043478260869565216,\n",
       " '80092': 0.125,\n",
       " '86763': 0.06976744186046512,\n",
       " '80374': 0.0,\n",
       " '84696': 0.0,\n",
       " '85055': 0.0,\n",
       " '90312': 0.0,\n",
       " '85056': 0.25,\n",
       " '80571': 0.0,\n",
       " '85050': 0.08695652173913043,\n",
       " '84058': 0.25,\n",
       " '84059': 0.058823529411764705,\n",
       " '84056': 0.2222222222222222,\n",
       " '90319': 0.0,\n",
       " '85059': 0.07142857142857142,\n",
       " '84050': 0.0,\n",
       " '85508': 0.18181818181818182,\n",
       " '84677': 0.25,\n",
       " '86566': 0.2,\n",
       " '84675': 0.0,\n",
       " '86560': 0.0,\n",
       " '86561': 0.25,\n",
       " '86562': 0.16666666666666666,\n",
       " '86563': 0.3333333333333333,\n",
       " '83585': 0.06666666666666667,\n",
       " '83584': 0.1111111111111111,\n",
       " '84678': 0.25,\n",
       " '83586': 0.16666666666666666,\n",
       " '87963': 0.125,\n",
       " '87155': 0.0,\n",
       " '80971': 0.1,\n",
       " '85307': 0.25,\n",
       " '84584': 0.25,\n",
       " '84587': 0.0,\n",
       " '84582': 0.25,\n",
       " '83277': 0.15384615384615385,\n",
       " '83276': 0.2222222222222222,\n",
       " '83274': 0.11764705882352941,\n",
       " '83273': 0.0625,\n",
       " '83272': 0.3333333333333333,\n",
       " '83903': 0.25,\n",
       " '83902': 0.05555555555555555,\n",
       " '87965': 0.0,\n",
       " '83475': 0.14285714285714285,\n",
       " '86693': 0.25,\n",
       " '86691': 0.14285714285714285,\n",
       " '89969': 0.16666666666666666,\n",
       " '83290': 0.2222222222222222,\n",
       " '84172': 0.045454545454545456,\n",
       " '89617': 0.2,\n",
       " '89966': 0.15384615384615385,\n",
       " '89613': 0.0,\n",
       " '80805': 0.2222222222222222,\n",
       " '80804': 0.0,\n",
       " '80801': 0.0,\n",
       " '80800': 0.0,\n",
       " '80802': 0.16666666666666666,\n",
       " '87159': 0.16666666666666666,\n",
       " '87109': 0.0,\n",
       " '87101': 0.4,\n",
       " '87100': 0.3,\n",
       " '87105': 0.1111111111111111,\n",
       " '87104': 0.0,\n",
       " '83619': 0.0,\n",
       " '89922': 0.25,\n",
       " '84474': 0.0,\n",
       " '84475': 0.2222222222222222,\n",
       " '84476': 0.14285714285714285,\n",
       " '83612': 0.3333333333333333,\n",
       " '83643': 0.10714285714285714,\n",
       " '83123': 0.2,\n",
       " '83527': 0.1,\n",
       " '83126': 0.0,\n",
       " '83125': 0.3333333333333333,\n",
       " '86186': 0.2222222222222222,\n",
       " '85680': 0.0,\n",
       " '86184': 0.25,\n",
       " '86185': 0.0,\n",
       " '89767': 0.1,\n",
       " '86183': 0.05,\n",
       " '90742': 0.125,\n",
       " '87615': 0.16666666666666666,\n",
       " '85652': 0.25,\n",
       " '86748': 0.0,\n",
       " '86744': 0.0,\n",
       " '83765': 0.0,\n",
       " '91664': 0.0,\n",
       " '87619': 0.14285714285714285,\n",
       " '88627': 0.25,\n",
       " '91661': 0.0,\n",
       " '86743': 0.25,\n",
       " '83056': 0.0,\n",
       " '83055': 0.25,\n",
       " '83726': 0.0,\n",
       " '83053': 0.0,\n",
       " '83052': 0.1875,\n",
       " '83723': 0.16666666666666666,\n",
       " '83722': 0.08,\n",
       " '91464': 0.16666666666666666,\n",
       " '91460': 0.14285714285714285,\n",
       " '91463': 0.0,\n",
       " '83058': 0.1111111111111111,\n",
       " '89547': 0.0,\n",
       " '91687': 0.0,\n",
       " '89816': 0.0,\n",
       " '89543': 0.1111111111111111,\n",
       " '91680': 0.0,\n",
       " '88818': 0.42857142857142855,\n",
       " '89540': 0.25,\n",
       " '88816': 0.0,\n",
       " '88817': 0.0,\n",
       " '88814': 0.2,\n",
       " '81782': 0.0,\n",
       " '88366': 0.0,\n",
       " '89548': 0.07142857142857142,\n",
       " '87579': 0.0,\n",
       " '88568': 0.0,\n",
       " '87570': 0.07142857142857142,\n",
       " '82051': 0.125,\n",
       " '87573': 0.2,\n",
       " '87574': 0.18181818181818182,\n",
       " '87575': 0.25,\n",
       " '82056': 0.25,\n",
       " '85983': 0.058823529411764705,\n",
       " '82846': 0.1,\n",
       " '85981': 0.17647058823529413,\n",
       " '85987': 0.4,\n",
       " '87778': 0.05263157894736842,\n",
       " '87779': 0.25,\n",
       " '87776': 0.2222222222222222,\n",
       " '87777': 0.25,\n",
       " '87774': 0.2857142857142857,\n",
       " '87804': 0.06976744186046512,\n",
       " '85071': 0.125,\n",
       " '87771': 0.1,\n",
       " '88964': 0.0,\n",
       " '80232': 0.0,\n",
       " '88969': 0.2222222222222222,\n",
       " '91205': 0.42857142857142855,\n",
       " '88528': 0.0,\n",
       " '89580': 0.0,\n",
       " '81249': 0.0,\n",
       " '80724': 0.4,\n",
       " '84902': 0.16666666666666666,\n",
       " '84903': 0.0,\n",
       " '84904': 0.17647058823529413,\n",
       " '89857': 0.25,\n",
       " '86359': 0.0,\n",
       " '81438': 0.5,\n",
       " '81436': 0.25,\n",
       " '86354': 0.08333333333333333,\n",
       " '89381': 0.25,\n",
       " '81432': 0.08333333333333333,\n",
       " '86351': 0.14285714285714285,\n",
       " '81430': 0.06666666666666667,\n",
       " '82454': 0.0,\n",
       " '82455': 0.0,\n",
       " '88498': 0.2222222222222222,\n",
       " '84176': 0.09090909090909091,\n",
       " '89147': 0.0,\n",
       " '87971': 0.3,\n",
       " '82452': 0.3333333333333333,\n",
       " '85176': 0.0,\n",
       " '88490': 0.16666666666666666,\n",
       " '88491': 0.2,\n",
       " '82458': 0.0,\n",
       " '82459': 0.375,\n",
       " '88494': 0.0,\n",
       " '88495': 0.14285714285714285,\n",
       " '91515': 0.1,\n",
       " '91514': 0.125,\n",
       " '82188': 0.0,\n",
       " '82189': 0.0,\n",
       " '84173': 0.25,\n",
       " '91841': 0.15384615384615385,\n",
       " '91512': 0.14285714285714285,\n",
       " '82180': 0.25,\n",
       " '88709': 0.14285714285714285,\n",
       " '82187': 0.17647058823529413,\n",
       " '91848': 0.0,\n",
       " '86502': 0.0,\n",
       " '86215': 0.14285714285714285,\n",
       " '90114': 0.18181818181818182,\n",
       " '88636': 0.0,\n",
       " '86210': 0.1,\n",
       " '88147': 0.16666666666666666,\n",
       " '88148': 0.2,\n",
       " '86506': 0.0,\n",
       " '81247': 0.0,\n",
       " '85700': 0.11764705882352941,\n",
       " '82983': 0.2222222222222222,\n",
       " '82980': 0.15384615384615385,\n",
       " '82981': 0.08108108108108109,\n",
       " '88382': 0.14285714285714285,\n",
       " '90110': 0.2,\n",
       " '82236': 0.06666666666666667,\n",
       " '82985': 0.25,\n",
       " '82238': 0.08695652173913043,\n",
       " '80727': 0.0,\n",
       " '82989': 0.0,\n",
       " '81504': 0.16666666666666666,\n",
       " '87597': 0.25,\n",
       " '87594': 0.17647058823529413,\n",
       " '87592': 0.0,\n",
       " '80894': 0.2,\n",
       " '81292': 0.14285714285714285,\n",
       " '81296': 0.2,\n",
       " '80892': 0.4,\n",
       " '86776': 0.2,\n",
       " '85751': 0.16666666666666666,\n",
       " '80581': 0.0,\n",
       " '80582': 0.25,\n",
       " '80586': 0.25,\n",
       " '81340': 0.0,\n",
       " '81615': 0.0,\n",
       " '81342': 0.0,\n",
       " '88038': 0.2857142857142857,\n",
       " '81612': 0.2,\n",
       " '80748': 0.16666666666666666,\n",
       " '80747': 0.25,\n",
       " '88030': 0.0,\n",
       " '80216': 0.0,\n",
       " '88033': 0.16666666666666666,\n",
       " '81185': 0.1111111111111111,\n",
       " '81183': 0.0,\n",
       " '82529': 0.07692307692307693,\n",
       " '81181': 0.05555555555555555,\n",
       " '82526': 0.0,\n",
       " '81188': 0.16666666666666666,\n",
       " '83684': 0.2,\n",
       " '82837': 0.0,\n",
       " '85191': 0.0,\n",
       " '85192': 0.16666666666666666,\n",
       " '85193': 0.2222222222222222,\n",
       " '85199': 0.0,\n",
       " '85424': 0.0,\n",
       " '84756': 0.17647058823529413,\n",
       " '85426': 0.2857142857142857,\n",
       " '80100': 0.16666666666666666,\n",
       " '80102': 0.2,\n",
       " '85423': 0.0,\n",
       " '90259': 0.2222222222222222,\n",
       " '90258': 0.0,\n",
       " '84114': 0.0,\n",
       " '84113': 0.3333333333333333,\n",
       " '80109': 0.0,\n",
       " '84111': 0.16666666666666666,\n",
       " '81763': 0.3333333333333333,\n",
       " '81762': 0.0,\n",
       " '90494': 0.25,\n",
       " '81767': 0.25,\n",
       " '81766': 0.0,\n",
       " '81989': 0.2857142857142857,\n",
       " '81769': 0.06666666666666667,\n",
       " '81982': 0.2857142857142857,\n",
       " '90499': 0.2,\n",
       " '90079': 0.0,\n",
       " '87374': 0.14285714285714285,\n",
       " '90071': 0.18181818181818182,\n",
       " '90070': 0.07142857142857142,\n",
       " '85600': 0.0,\n",
       " '81743': 0.10526315789473684,\n",
       " '81965': 0.0,\n",
       " '83863': 0.25,\n",
       " '81966': 0.1,\n",
       " '83866': 0.16666666666666666,\n",
       " '82838': 0.5,\n",
       " '81962': 0.08333333333333333,\n",
       " '83869': 0.08333333333333333,\n",
       " '80364': 0.2,\n",
       " '80238': 0.0,\n",
       " '80367': 0.0,\n",
       " '80369': 0.16666666666666666,\n",
       " '80334': 0.25,\n",
       " '85046': 0.3333333333333333,\n",
       " '80567': 0.14285714285714285,\n",
       " '80564': 0.25,\n",
       " '80565': 0.25,\n",
       " '80562': 0.13333333333333333,\n",
       " '90676': 0.0,\n",
       " '80560': 0.09090909090909091,\n",
       " '80561': 0.0,\n",
       " '84063': 0.25,\n",
       " '85519': 0.1,\n",
       " '84067': 0.2222222222222222,\n",
       " '84066': 0.25,\n",
       " '80568': 0.2857142857142857,\n",
       " '80569': 0.4,\n",
       " '84643': 0.15789473684210525,\n",
       " '86510': 0.3,\n",
       " '86513': 0.0,\n",
       " '84640': 0.125,\n",
       " '90100': 0.0,\n",
       " '86517': 0.037037037037037035,\n",
       " '90102': 0.07317073170731707,\n",
       " '86518': 0.0,\n",
       " '84648': 0.0,\n",
       " '90109': 0.0,\n",
       " '90108': 0.0,\n",
       " '83594': 0.2,\n",
       " '83418': 0.0,\n",
       " '81201': 0.2222222222222222,\n",
       " '80963': 0.06666666666666667,\n",
       " '80964': 0.0,\n",
       " '83268': 0.0,\n",
       " '84319': 0.14285714285714285,\n",
       " '84245': 0.0,\n",
       " '83918': 0.09090909090909091,\n",
       " '84240': 0.2,\n",
       " '83260': 0.0,\n",
       " '83262': 0.2,\n",
       " '83264': 0.0,\n",
       " '83913': 0.2857142857142857,\n",
       " '83911': 0.0,\n",
       " '83469': 0.0,\n",
       " '83466': 0.0,\n",
       " '83462': 0.0625,\n",
       " '83463': 0.125,\n",
       " '89608': 0.07692307692307693,\n",
       " '83282': 0.0,\n",
       " '83280': 0.0,\n",
       " '88022': 0.13333333333333333,\n",
       " '89600': 0.2857142857142857,\n",
       " '89601': 0.0,\n",
       " '89602': 0.05555555555555555,\n",
       " '89972': 0.13333333333333333,\n",
       " '89973': 0.2727272727272727,\n",
       " '83288': 0.2222222222222222,\n",
       " '83289': 0.0,\n",
       " '91072': 0.0,\n",
       " '91073': 0.25,\n",
       " '91070': 0.16666666666666666,\n",
       " '80815': 0.25,\n",
       " '80812': 0.25,\n",
       " '91075': 0.2222222222222222,\n",
       " '86427': 0.0,\n",
       " '86420': 0.16666666666666666,\n",
       " '86423': 0.07692307692307693,\n",
       " '80819': 0.0,\n",
       " '89106': 0.0,\n",
       " '87112': 0.14285714285714285,\n",
       " '84315': 0.06666666666666667,\n",
       " '87110': 0.2222222222222222,\n",
       " '87111': 0.3333333333333333,\n",
       " '83609': 0.2,\n",
       " '84488': 0.25,\n",
       " '85326': 0.2,\n",
       " '83603': 0.0,\n",
       " '84316': 0.0,\n",
       " '83607': 0.16666666666666666,\n",
       " '84483': 0.2,\n",
       " '83605': 0.11764705882352941,\n",
       " '89775': 0.07692307692307693,\n",
       " '90533': 0.2857142857142857,\n",
       " '88458': 0.09375,\n",
       " '89773': 0.0,\n",
       " '90534': 0.21428571428571427,\n",
       " '83136': 0.0,\n",
       " '82066': 0.0,\n",
       " '83338': 0.25,\n",
       " '80750': 0.047619047619047616,\n",
       " '86010': 0.125,\n",
       " '90820': 0.16666666666666666,\n",
       " '82381': 0.14285714285714285,\n",
       " '81479': 0.0,\n",
       " '90821': 0.0,\n",
       " '87607': 0.16666666666666666,\n",
       " '87604': 0.25,\n",
       " '87605': 0.09090909090909091,\n",
       " '83672': 0.0,\n",
       " '91674': 0.2,\n",
       " '88909': 0.07692307692307693,\n",
       " '86736': 0.2222222222222222,\n",
       " '83735': 0.25,\n",
       " '83730': 0.14285714285714285,\n",
       " '83731': 0.0,\n",
       " '91476': 0.2,\n",
       " '91474': 0.14285714285714285,\n",
       " '88451': 0.2222222222222222,\n",
       " '91472': 0.14285714285714285,\n",
       " '83739': 0.0,\n",
       " '89550': 0.25,\n",
       " '89807': 0.0,\n",
       " '89804': 0.0,\n",
       " '89553': 0.2857142857142857,\n",
       " '91692': 0.25,\n",
       " '89800': 0.25,\n",
       " '89801': 0.0,\n",
       " '89558': 0.09090909090909091,\n",
       " '88821': 0.043478260869565216,\n",
       " '88827': 0.0,\n",
       " '88825': 0.1111111111111111,\n",
       " '88558': 0.16666666666666666,\n",
       " '81234': 0.25,\n",
       " '82539': 0.25,\n",
       " '88554': 0.14285714285714285,\n",
       " '86645': 0.3333333333333333,\n",
       " '86644': 0.0,\n",
       " '85998': 0.0,\n",
       " '86640': 0.09090909090909091,\n",
       " '85994': 0.0,\n",
       " '85995': 0.2222222222222222,\n",
       " '85997': 0.125,\n",
       " '87746': 0.3333333333333333,\n",
       " '91219': 0.25,\n",
       " '81484': 0.0,\n",
       " '82411': 0.0,\n",
       " '88957': 0.13333333333333333,\n",
       " '87123': 0.0,\n",
       " '88954': 0.0,\n",
       " '88953': 0.0,\n",
       " '88952': 0.0,\n",
       " '88950': 0.09090909090909091,\n",
       " '88736': 0.0,\n",
       " '82145': 0.0,\n",
       " '86438': 0.0,\n",
       " '88739': 0.2,\n",
       " '86349': 0.0,\n",
       " '89398': 0.0,\n",
       " '89399': 0.25,\n",
       " '86341': 0.14285714285714285,\n",
       " '81422': 0.06666666666666667,\n",
       " '89393': 0.0,\n",
       " '89391': 0.14285714285714285,\n",
       " '87903': 0.16666666666666666,\n",
       " '82422': 0.14285714285714285,\n",
       " '82425': 0.0,\n",
       " '89159': 0.0,\n",
       " '87907': 0.11764705882352941,\n",
       " '82426': 0.07692307692307693,\n",
       " '89154': 0.06666666666666667,\n",
       " '87908': 0.1,\n",
       " '89153': 0.21428571428571427,\n",
       " '91504': 0.0,\n",
       " '88851': 0.1,\n",
       " '91502': 0.0,\n",
       " '91509': 0.2,\n",
       " '84390': 0.2,\n",
       " '80452': 0.15384615384615385,\n",
       " '86234': 0.0,\n",
       " '86235': 0.1111111111111111,\n",
       " '86237': 0.0,\n",
       " '86230': 0.1875,\n",
       " '81511': 0.25,\n",
       " '88608': 0.0,\n",
       " '88858': 0.0,\n",
       " '84808': 0.14285714285714285,\n",
       " '84807': 0.6,\n",
       " '82086': 0.08333333333333333,\n",
       " '82089': 0.09090909090909091,\n",
       " '82736': 0.0,\n",
       " '82730': 0.2,\n",
       " '82733': 0.11764705882352941,\n",
       " '82956': 0.3333333333333333,\n",
       " '81289': 0.07692307692307693,\n",
       " '82953': 0.125,\n",
       " '81286': 0.125,\n",
       " '85690': 0.0,\n",
       " '81281': 0.2857142857142857,\n",
       " '81283': 0.08333333333333333,\n",
       " '90804': 0.2,\n",
       " '90805': 0.2222222222222222,\n",
       " '90806': 0.07692307692307693,\n",
       " '90807': 0.0,\n",
       " '90801': 0.0,\n",
       " '82018': 0.0,\n",
       " '81352': 0.2222222222222222,\n",
       " '81601': 0.13333333333333333,\n",
       " '81604': 0.16666666666666666,\n",
       " '85743': 0.4,\n",
       " '81609': 0.0,\n",
       " '81358': 0.12,\n",
       " '80777': 0.0,\n",
       " '84227': 0.25,\n",
       " '80775': 0.25,\n",
       " '80774': 0.0,\n",
       " '81193': 0.25,\n",
       " '81194': 0.125,\n",
       " '81196': 0.16666666666666666,\n",
       " '82883': 0.25,\n",
       " '81199': 0.25,\n",
       " '82880': 0.2,\n",
       " '82887': 0.2727272727272727,\n",
       " '82886': 0.25,\n",
       " '82557': 0.2727272727272727,\n",
       " '84220': 0.05555555555555555,\n",
       " '90225': 0.5,\n",
       " '83209': 0.2,\n",
       " '85022': 0.0,\n",
       " '80481': 0.21428571428571427,\n",
       " '80482': 0.2,\n",
       " '83060': 0.07894736842105263,\n",
       " '80056': 0.25,\n",
       " '80170': 0.25,\n",
       " '85455': 0.09090909090909091,\n",
       " '85454': 0.16666666666666666,\n",
       " '84189': 0.0,\n",
       " '80178': 0.25,\n",
       " '90249': 0.11764705882352941,\n",
       " '84106': 0.1111111111111111,\n",
       " '87419': 0.0,\n",
       " '82492': 0.0,\n",
       " '80508': 0.09090909090909091,\n",
       " '90482': 0.05,\n",
       " '90483': 0.0,\n",
       " '85293': 0.375,\n",
       " '90485': 0.18181818181818182,\n",
       " '85290': 0.0,\n",
       " '81774': 0.0,\n",
       " '81992': 0.2,\n",
       " '81777': 0.2,\n",
       " '81994': 0.0,\n",
       " '81996': 0.05555555555555555,\n",
       " '86301': 0.25,\n",
       " '90068': 0.0,\n",
       " '87349': 0.2,\n",
       " '85671': 0.05555555555555555,\n",
       " '87346': 0.16666666666666666,\n",
       " '90067': 0.0,\n",
       " '87341': 0.375,\n",
       " '81976': 0.18181818181818182,\n",
       " '81972': 0.25,\n",
       " '80229': 0.1111111111111111,\n",
       " '83857': 0.25,\n",
       " '83852': 0.25,\n",
       " '83850': 0.08108108108108109,\n",
       " '84074': 0.25,\n",
       " '81541': 0.16666666666666666,\n",
       " '84076': 0.09090909090909091,\n",
       " '80399': 0.25,\n",
       " '84071': 0.4,\n",
       " '80397': 0.25,\n",
       " '84078': 0.2,\n",
       " '81542': 0.1,\n",
       " '80553': 0.058823529411764705,\n",
       " '80551': 0.3333333333333333,\n",
       " '90669': 0.09523809523809523,\n",
       " '90665': 0.14285714285714285,\n",
       " '80559': 0.0,\n",
       " '80002': 0.2,\n",
       " '80957': 0.0,\n",
       " '85707': 0.1111111111111111,\n",
       " '85706': 0.16666666666666666,\n",
       " '80953': 0.0,\n",
       " '80952': 0.0,\n",
       " '85703': 0.0,\n",
       " '85702': 0.125,\n",
       " '85918': 0.2727272727272727,\n",
       " '86508': 0.14285714285714285,\n",
       " '84657': 0.2222222222222222,\n",
       " '84650': 0.25,\n",
       " '84651': 0.2,\n",
       " '90118': 0.07142857142857142,\n",
       " '90547': 0.5,\n",
       " '87298': 0.2,\n",
       " '84253': 0.25,\n",
       " '84254': 0.0,\n",
       " '82702': 0.125,\n",
       " '83923': 0.0,\n",
       " '85437': 0.25,\n",
       " '82667': 0.0,\n",
       " '83458': 0.0,\n",
       " '81057': 0.0,\n",
       " '89351': 0.08333333333333333,\n",
       " '82493': 0.07142857142857142,\n",
       " '87089': 0.0,\n",
       " '89941': 0.16666666666666666,\n",
       " '89945': 0.0,\n",
       " '82475': 0.2,\n",
       " '87126': 0.0,\n",
       " '80827': 0.0,\n",
       " '80825': 0.3333333333333333,\n",
       " '87120': 0.25,\n",
       " '86434': 0.0,\n",
       " '86432': 0.25,\n",
       " '91041': 0.1111111111111111,\n",
       " '91040': 0.07692307692307693,\n",
       " '83634': 0.25,\n",
       " '83631': 0.0,\n",
       " '83630': 0.17647058823529413,\n",
       " '83638': 0.4,\n",
       " '84494': 0.2857142857142857,\n",
       " '89797': 0.0,\n",
       " '83149': 0.0,\n",
       " '89702': 0.16666666666666666,\n",
       " '87251': 0.25,\n",
       " '89707': 0.1111111111111111,\n",
       " '89706': 0.2,\n",
       " '83141': 0.0,\n",
       " '83140': 0.25,\n",
       " '83147': 0.14285714285714285,\n",
       " '91204': 0.0,\n",
       " '85854': 0.0,\n",
       " '89250': 0.25,\n",
       " '85853': 0.16666666666666666,\n",
       " '85852': 0.2,\n",
       " '87632': 0.25,\n",
       " '87631': 0.1875,\n",
       " '87635': 0.125,\n",
       " '87634': 0.0,\n",
       " '86721': 0.4,\n",
       " '86726': 0.2,\n",
       " '86724': 0.0,\n",
       " '83701': 0.3333333333333333,\n",
       " '83707': 0.0,\n",
       " '89675': 0.0,\n",
       " '91191': 0.0,\n",
       " '91190': 0.09090909090909091,\n",
       " '83709': 0.0,\n",
       " '91195': 0.08108108108108109,\n",
       " '88544': 0.3,\n",
       " '88545': 0.0,\n",
       " '89831': 0.0,\n",
       " '88540': 0.2,\n",
       " '88542': 0.18181818181818182,\n",
       " '89834': 0.0,\n",
       " '89839': 0.14285714285714285,\n",
       " '88548': 0.08695652173913043,\n",
       " '88549': 0.6,\n",
       " '89019': 0.0,\n",
       " '87751': 0.14285714285714285,\n",
       " '87752': 0.14285714285714285,\n",
       " '89015': 0.2,\n",
       " '89014': 0.2,\n",
       " '89017': 0.2,\n",
       " '87758': 0.25,\n",
       " '86657': 0.11764705882352941,\n",
       " '91224': 0.0,\n",
       " '89490': 0.25,\n",
       " '89492': 0.0,\n",
       " '89495': 0.21428571428571427,\n",
       " '89497': 0.25,\n",
       " '89499': 0.0,\n",
       " '89498': 0.0,\n",
       " '88945': 0.14285714285714285,\n",
       " '88720': 0.2,\n",
       " '90351': 0.08333333333333333,\n",
       " '90735': 0.2222222222222222,\n",
       " '91442': 0.25,\n",
       " '90251': 0.25,\n",
       " '82432': 0.047619047619047616,\n",
       " '89128': 0.06976744186046512,\n",
       " '87916': 0.0,\n",
       " '87915': 0.12,\n",
       " '89120': 0.0,\n",
       " '82438': 0.2222222222222222,\n",
       " '82439': 0.23076923076923078,\n",
       " '89124': 0.1,\n",
       " '83400': 0.08333333333333333,\n",
       " '91530': 0.14285714285714285,\n",
       " '91536': 0.375,\n",
       " '88832': 0.3333333333333333,\n",
       " '88833': 0.05263157894736842,\n",
       " '91538': 0.0,\n",
       " '86634': 0.0,\n",
       " '89833': 0.2,\n",
       " '88076': 0.2857142857142857,\n",
       " '81795': 0.0,\n",
       " '81561': 0.0,\n",
       " '81560': 0.14285714285714285,\n",
       " '86243': 0.1111111111111111,\n",
       " '81562': 0.0,\n",
       " '88618': 0.09090909090909091,\n",
       " '88619': 0.125,\n",
       " '81567': 0.14285714285714285,\n",
       " '81566': 0.25,\n",
       " '88615': 0.16666666666666666,\n",
       " '88617': 0.11764705882352941,\n",
       " '88610': 0.0,\n",
       " '80708': 0.25,\n",
       " '88613': 0.2857142857142857,\n",
       " '86087': 0.0,\n",
       " '89237': 0.2857142857142857,\n",
       " '89236': 0.1,\n",
       " '86083': 0.25,\n",
       " '86082': 0.0,\n",
       " '89233': 0.15384615384615385,\n",
       " '81322': 0.0,\n",
       " '84813': 0.045454545454545456,\n",
       " '84811': 0.125,\n",
       " '84817': 0.18181818181818182,\n",
       " '86088': 0.0,\n",
       " '85504': 0.0,\n",
       " '82729': 0.125,\n",
       " '90642': 0.25,\n",
       " '82724': 0.16666666666666666,\n",
       " '82723': 0.18181818181818182,\n",
       " '82092': 0.1111111111111111,\n",
       " '82093': 0.0,\n",
       " '82947': 0.16666666666666666,\n",
       " '82945': 0.0,\n",
       " '82940': 0.0,\n",
       " '81263': 0.4,\n",
       " '88931': 0.09090909090909091,\n",
       " '90317': 0.42857142857142855,\n",
       " '86940': 0.1,\n",
       " '82949': 0.0,\n",
       " '90871': 0.2,\n",
       " '80765': 0.25,\n",
       " '80766': 0.3333333333333333,\n",
       " '90872': 0.14285714285714285,\n",
       " '90875': 0.0,\n",
       " '88421': 0.0,\n",
       " '80762': 0.25,\n",
       " '80769': 0.0,\n",
       " '82565': 0.125,\n",
       " '82894': 0.0,\n",
       " '84843': 0.25,\n",
       " '82893': 0.2222222222222222,\n",
       " '81366': 0.0,\n",
       " '86884': 0.14285714285714285,\n",
       " '86883': 0.08333333333333333,\n",
       " '81362': 0.25,\n",
       " '86881': 0.0,\n",
       " '81360': 0.0,\n",
       " '86393': 0.0,\n",
       " '82548': 0.06666666666666667,\n",
       " '82549': 0.05555555555555555,\n",
       " '81169': 0.14285714285714285,\n",
       " '86395': 0.4,\n",
       " '82542': 0.2857142857142857,\n",
       " '82543': 0.4,\n",
       " '82540': 0.13333333333333333,\n",
       " '82544': 0.2,\n",
       " '89018': 0.16666666666666666,\n",
       " '81384': 0.125,\n",
       " '86949': 0.2,\n",
       " '81381': 0.0,\n",
       " '90580': 0.0,\n",
       " '90583': 0.0,\n",
       " '81389': 0.0,\n",
       " '86868': 0.15789473684210525,\n",
       " '90587': 0.047619047619047616,\n",
       " '90586': 0.16666666666666666,\n",
       " '80490': 0.0,\n",
       " '80497': 0.16666666666666666,\n",
       " '87456': 0.09090909090909091,\n",
       " '80160': 0.1111111111111111,\n",
       " '80161': 0.0,\n",
       " '85447': 0.0,\n",
       " '80164': 0.2,\n",
       " '90278': 0.16666666666666666,\n",
       " '90276': 0.0,\n",
       " '90907': 0.0,\n",
       " '80169': 0.0,\n",
       " '90273': 0.043478260869565216,\n",
       " '90271': 0.0,\n",
       " '84571': 0.25,\n",
       " '90478': 0.0,\n",
       " '85286': 0.25,\n",
       " '85288': 0.2857142857142857,\n",
       " '85289': 0.0,\n",
       " '81703': 0.2857142857142857,\n",
       " '81705': 0.3333333333333333,\n",
       " '81942': 0.16666666666666666,\n",
       " '90293': 0.0,\n",
       " '85662': 0.13333333333333333,\n",
       " '86568': 0.25,\n",
       " '87352': 0.0,\n",
       " '85661': 0.1111111111111111,\n",
       " '85664': 0.5,\n",
       " '83848': 0.13333333333333333,\n",
       " '83849': 0.0,\n",
       " '84393': 0.125,\n",
       " '84395': 0.2,\n",
       " '84397': 0.13333333333333333,\n",
       " '81944': 0.0,\n",
       " '83842': 0.0,\n",
       " '83843': 0.09090909090909091,\n",
       " '83844': 0.0,\n",
       " '83845': 0.25,\n",
       " '84000': 0.125,\n",
       " '84005': 0.0,\n",
       " '80389': 0.0,\n",
       " '80384': 0.3333333333333333,\n",
       " '80385': 0.08333333333333333,\n",
       " '80383': 0.125,\n",
       " '88374': 0.2727272727272727,\n",
       " '82204': 0.0,\n",
       " '81014': 0.13636363636363635,\n",
       " '81017': 0.21428571428571427,\n",
       " '81011': 0.0,\n",
       " '81010': 0.25,\n",
       " '81012': 0.75,\n",
       " '85064': 0.0,\n",
       " '80545': 0.07692307692307693,\n",
       " '85066': 0.09090909090909091,\n",
       " '80015': 0.3333333333333333,\n",
       " '80540': 0.10526315789473684,\n",
       " '85061': 0.16666666666666666,\n",
       " '80010': 0.07692307692307693,\n",
       " '80011': 0.125,\n",
       " '80940': 0.09090909090909091,\n",
       " '84628': 0.25,\n",
       " '90121': 0.2222222222222222,\n",
       " '80943': 0.0,\n",
       " '90126': 0.0,\n",
       " '80946': 0.09090909090909091,\n",
       " '80947': 0.16666666666666666,\n",
       " '80948': 0.0,\n",
       " '80949': 0.1111111111111111,\n",
       " '86535': 0.2,\n",
       " '90128': 0.2,\n",
       " '84627': 0.0,\n",
       " '86530': 0.25,\n",
       " '83934': 0.07692307692307693,\n",
       " '89794': 0.0,\n",
       " '83932': 0.14285714285714285,\n",
       " '83933': 0.07142857142857142,\n",
       " '86156': 0.1,\n",
       " '83938': 0.0,\n",
       " '87289': 0.25,\n",
       " '87280': 0.16666666666666666,\n",
       " '83448': 0.0,\n",
       " '87287': 0.037037037037037035,\n",
       " '87284': 0.2,\n",
       " '90724': 0.0,\n",
       " '90721': 0.0,\n",
       " '90052': 0.09375,\n",
       " '90723': 0.0,\n",
       " '84714': 0.0,\n",
       " '84717': 0.2,\n",
       " '90729': 0.25,\n",
       " '84710': 0.0,\n",
       " '81306': 0.15384615384615385,\n",
       " '84536': 0.0,\n",
       " '84530': 0.09090909090909091,\n",
       " '84533': 0.0,\n",
       " '84539': 0.18181818181818182,\n",
       " '85397': 0.0,\n",
       " '87130': 0.0,\n",
       " '88940': 0.0,\n",
       " '80838': 0.0,\n",
       " '91051': 0.2,\n",
       " '86401': 0.16666666666666666,\n",
       " '80837': 0.0,\n",
       " '91054': 0.3333333333333333,\n",
       " '86406': 0.125,\n",
       " '80832': 0.1,\n",
       " '89716': 0.16666666666666666,\n",
       " '85097': 0.0,\n",
       " '83154': 0.25,\n",
       " '86715': 0.125,\n",
       " '85849': 0.0,\n",
       " '85842': 0.14285714285714285,\n",
       " '85841': 0.0,\n",
       " '91454': 0.4,\n",
       " '91455': 0.0,\n",
       " '87628': 0.2,\n",
       " '91451': 0.25,\n",
       " '91452': 0.25,\n",
       " '87626': 0.25,\n",
       " '87627': 0.09090909090909091,\n",
       " '91458': 0.1,\n",
       " '91459': 0.125,\n",
       " '91189': 0.25,\n",
       " '89950': 0.0,\n",
       " '89953': 0.2857142857142857,\n",
       " '83715': 0.1111111111111111,\n",
       " '91181': 0.09090909090909091,\n",
       " '83710': 0.0,\n",
       " '89959': 0.375,\n",
       " '88531': 0.1111111111111111,\n",
       " '89829': 0.0,\n",
       " '88007': 0.125,\n",
       " '89823': 0.14285714285714285,\n",
       " '87721': 0.25,\n",
       " '84272': 0.08333333333333333,\n",
       " '89009': 0.0625,\n",
       " '87728': 0.2857142857142857,\n",
       " '89002': 0.25,\n",
       " '91230': 0.14285714285714285,\n",
       " '91234': 0.15789473684210525,\n",
       " '90514': 0.18181818181818182,\n",
       " '86665': 0.1111111111111111,\n",
       " '91239': 0.0,\n",
       " '86668': 0.125,\n",
       " '84824': 0.0,\n",
       " '89482': 0.09375,\n",
       " '85460': 0.0,\n",
       " '89480': 0.4,\n",
       " '80637': 0.16666666666666666,\n",
       " '85599': 0.2,\n",
       " '89489': 0.0,\n",
       " ...}"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "similarities"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Now for the top K most similar users, let's aggregate the brands they like.\n",
    "# I sort by the jaccard similarty so most similar users are first\n",
    "# I use the sorted method, but because I'm dorting dictionaries\n",
    "# I specify the \"key\" as the value of the dictionary\n",
    "# the key is what the list should sort on\n",
    "# so the most similar users end up being on top\n",
    "most_similar_users = sorted(similarities, key=similarities.get, reverse=True)[:K]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# list of K similar users' IDs\n",
    "most_similar_users"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# let's see what some of the most similar users likes\n",
    "print(brandsfor[most_similar_users[0]])\n",
    "print(brandsfor[most_similar_users[1]])\n",
    "print(brandsfor[most_similar_users[2]])\n",
    "print(brandsfor[most_similar_users[3]])\n",
    "print(brandsfor[most_similar_users[4]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Aggregate all brands liked by the K most similar users into a single set\n",
    "brands_to_recommend = set()\n",
    "for user in most_similar_users:\n",
    "    # for each user\n",
    "    brands_to_recommend.update(set(brandsfor[user]))\n",
    "    # add to the set of brands_to_recommend\n",
    "    \n",
    "    \n",
    "brands_to_recommend\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# EXERCISE: use a set difference so brands_to_recommend only has\n",
    "# brands that given_user hasn't seen yet\n",
    "brands_to_recommend = brands_to_recommend - set(given_user)\n",
    "brands_to_recommend"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import collections\n",
    "\n",
    "# We can take this one step further and caculate a \"score\" of recommendation\n",
    "# We will define the score as being the number of times\n",
    "# a brand appears within the first K users\n",
    "brands_to_recommend = []\n",
    "for user in most_similar_users:\n",
    "    brands_to_recommend += list(set(brandsfor[user]) - set(given_user))\n",
    "\n",
    "# Use a counter to count the number of times a brand appears\n",
    "recommend_with_scores = collections.Counter(brands_to_recommend)\n",
    "\n",
    "# Now we see Gap has the highest score!\n",
    "recommend_with_scores\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. Recommender (Item Similarity)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "'''\n",
    "We can also define a similary between items using jaccard similarity.\n",
    "We can say that the similarity between two items is the jaccard similarity\n",
    "between the sets of people who like the two brands.\n",
    "\n",
    "Example: similarity of Gap to Target is:\n",
    "'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# filter users by liking Gap\n",
    "gap_lovers = set(user_brands['Gap' == user_brands.Store].ID)\n",
    "old_navy_lovers = set(user_brands['Old Navy' == user_brands.Store].ID)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# similarty between Gap and Old Navy\n",
    "jaccard(gap_lovers, old_navy_lovers)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "guess_lovers = set(user_brands['Guess' == user_brands.Store].ID)\n",
    "# similarty between Gap andGuess\n",
    "jaccard(guess_lovers, gap_lovers)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "calvin_lovers = set(user_brands['Calvin Klein' == user_brands.Store].ID)\n",
    "# similarty between Gap and Calvin Klein\n",
    "jaccard(calvin_lovers, gap_lovers)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
